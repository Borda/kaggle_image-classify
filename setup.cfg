[metadata]
name = kaggle-image-classification
version = 2022.05
author = Jiri Borovec
author_email = jirka@pytorchlightning.ai
url = https://github.com/Borda/kaggle_image-classify
description = Tooling for Kaggle image classification challenges
description-file = README.md
long_description = file: README.md, LICENSE
long_description_content_type = text/markdown
keywords = image, classification, kaggle, challenge
license = BSD 3-Clause License
license_file = LICENSE
classifiers =
    Environment :: Console
    Natural Language :: English
    # How mature is this project? Common values are
    #   3 - Alpha, 4 - Beta, 5 - Production/Stable
    Development Status :: 3 - Alpha
    # Indicate who your project is intended for
    Intended Audience :: Developers
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Scientific/Engineering :: Image Recognition
    Topic :: Scientific/Engineering :: Information Analysis
    # Pick your license as you wish
    # 'License :: OSI Approved :: BSD License',
    Operating System :: OS Independent
    # Specify the Python versions you support here. In particular, ensure
    # that you indicate whether you support Python 2, Python 3 or both.
    Programming Language :: Python :: 3

[options]
python_requires = >=3.7
zip_safe = False
include_package_data = True
packages = find:
install_requires =
    Pillow>=8.2
    torch>=1.8.1
    torchmetrics>=0.7.0, <0.11.0
    pytorch-lightning>=1.5.0
    torchvision
    timm>=0.5
    pandas
    matplotlib
    scikit-learn>=1.0
    seaborn
    joblib
    tqdm
    fire

;[options.package_data]
;* = *.txt, *.rst
;hello = *.msg

;[options.entry_points]
;console_scripts =
;    executable-name = my_package.module:function

[options.extras_require]
app =
    streamlit
    gdown
test =
    codecov>=2.1
    pytest>=6.0
    pytest-cov>2.10
    twine>=4.0
plant_pathology =
    kornia>=0.5.2
imet_collect =
    opencv-python
birdclef =
    lightning-flash[audio]
    noisereduce
    librosa

[options.packages.find]
exclude =
    docs*
    notebooks*
    tests*

[tool:pytest]
norecursedirs =
    .git
    dist
    build
addopts =
    --strict
    --doctest-modules
    --durations=25
    --color=yes

[coverage:report]
exclude_lines =
    pragma: no-cover
    pass

[flake8]
max-line-length = 120
exclude = .tox,*.egg,build,temp
select = E,W,F
doctests = True
verbose = 2
# https://pep8.readthedocs.io/en/latest/intro.html#error-codes
format = pylint
# see: https://www.flake8rules.com/
ignore =
    # Do not assign a lambda expression, use a def
    E731
